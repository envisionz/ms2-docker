<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"

	xmlns:security="http://www.springframework.org/schema/security"

	xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"

	xsi:schemaLocation="
            http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws                     http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs                     http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core                      http://cxf.apache.org/schemas/core.xsd
            http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd
            http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<!-- ==================================================================== -->
	<!-- === REST Security ================================================== -->
	<!-- ==================================================================== -->
	<security:global-method-security secured-annotations="enabled" />

	<security:http auto-config="true" create-session="never" >
		<security:http-basic entry-point-ref="restAuthenticationEntryPoint"/>
		<security:custom-filter ref="authenticationTokenProcessingFilter" before="FORM_LOGIN_FILTER"/>
		<security:custom-filter ref="sessionTokenProcessingFilter" after="FORM_LOGIN_FILTER"/>
		<security:anonymous />
	</security:http>
	<!-- Entry point -->
	<bean id="restAuthenticationEntryPoint" class="it.geosolutions.geostore.services.rest.security.RestAuthenticationEntryPoint" >
		<property name="realmName" value="GeoStore"></property>
	</bean>
	<!-- GeoStore Auth Provider -->
	<bean id="geoStoreUserServiceAuthenticationProvider"
		class="it.geosolutions.geostore.services.rest.security.UserServiceAuthenticationProvider">
	</bean>

	<bean class="it.geosolutions.geostore.services.rest.security.UserAttributeTokenAuthenticationFilter"
        id="authenticationTokenProcessingFilter">
	</bean>

	<bean class="it.geosolutions.geostore.services.rest.security.SessionTokenAuthenticationFilter"
        id="sessionTokenProcessingFilter">
	</bean>

	<security:authentication-manager>
		<security:authentication-provider ref='ldapUserDAO' />
        <security:authentication-provider ref='geoStoreUserServiceAuthenticationProvider' />
    </security:authentication-manager>

    <!-- LDAP Provider configuration -->
	<bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="${ldap.proto}://${ldap.host}:${ldap.port}/${ldap.root}" />
        <property name="userDn" value="${ldap.userDn}"/>
        <property name="password" value="${ldap.password}"/>
	</bean>

    <bean id="ldapInitializer" class="it.geosolutions.geostore.init.LDAPInit" lazy-init="false">
       <constructor-arg ref="ldapUserDAO" />
    </bean>

    <bean id="ldapUserDAO" class="it.geosolutions.geostore.core.dao.ldap.impl.UserDAOImpl">
        <constructor-arg ref="contextSource"/>
        <property name="searchBase" value="${ldap.userBase}"/>
        <property name="memberPattern" value="${ldap.memberPattern}"/>
        <property name="attributesMapper">
            <map>
                <entry key="${ldap.attrMail}" value="email"/>
                <entry key="${ldap.attrFN}" value="fullname"/>
                <entry key="${ldap.attrDescription}" value="description"/>
            </map>
        </property>
    </bean>
    <bean id="ldapUserGroupDAO" class="it.geosolutions.geostore.core.dao.ldap.impl.UserGroupDAOImpl">
        <constructor-arg ref="contextSource"/>
        <property name="searchBase" value="${ldap.groupBase}"/>
        <property name="addEveryOneGroup" value="true"/>
    </bean>


    <alias name="ldapUserGroupDAO" alias="userGroupDAO"/>
    <alias name="externalSecurityDAO" alias="SecurityDAO"/>
    <alias name="ldapUserDAO" alias="userDAO"/>
</beans>